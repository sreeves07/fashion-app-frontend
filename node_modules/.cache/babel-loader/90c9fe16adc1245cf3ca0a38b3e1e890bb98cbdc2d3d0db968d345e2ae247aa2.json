{"ast":null,"code":"var _jsxFileName = \"/Users/shamarR/Documents/9-0-Dev/Module-Four/fashionApp-frontend/src/Components/Drips.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Drip from './Drip';\nimport axios from \"axios\";\nimport SectionWrapper from \"./SectionWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL;\nconst Drips = () => {\n  _s();\n  const [collection, setCollection] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const sortData = data => {\n    const newData = {};\n    for (let i = 0; i < data.length; i++) {\n      const currCategory = data[i];\n      if (!newData[currCategory.category]) {\n        newData[currCategory.category] = [];\n      }\n      newData[currCategory.category].push(currCategory);\n    }\n    return newData;\n  };\n  useEffect(() => {\n    axios.get(`${API}/drip`).then(res => {\n      setCollection(res.data);\n      setIsLoading(false);\n    }).catch(err => {\n      window.alert(\"Error cant find drip!\");\n    });\n  }, []);\n  const tester = sortData(collection);\n  console.log(tester);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \" Loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(tester).map(function (keyName) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: keyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SectionWrapper, {\n          drip: tester[keyName]\n        }, tester[keyName].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Drips, \"E3dl6oYu4zKfkPraJb4y3rG0Umk=\");\n_c = Drips;\nexport default Drips;\nvar _c;\n$RefreshReg$(_c, \"Drips\");","map":{"version":3,"names":["useState","useEffect","Drip","axios","SectionWrapper","API","process","env","REACT_APP_API_URL","Drips","collection","setCollection","isLoading","setIsLoading","sortData","data","newData","i","length","currCategory","category","push","get","then","res","catch","err","window","alert","tester","console","log","Object","keys","map","keyName","id"],"sources":["/Users/shamarR/Documents/9-0-Dev/Module-Four/fashionApp-frontend/src/Components/Drips.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Drip from './Drip'\nimport axios from \"axios\"\nimport SectionWrapper from \"./SectionWrapper\";\nconst API = process.env.REACT_APP_API_URL\n\nconst Drips = () => {\n    const [collection, setCollection] = useState([])\n    const [isLoading, setIsLoading] = useState(true);\n\n    const sortData = (data) => {\n        const newData = {};\n        for (let i = 0; i < data.length; i++) {\n          const currCategory = data[i];\n          if (!newData[currCategory.category]) {\n            newData[currCategory.category] = [];\n          }\n          newData[currCategory.category].push(currCategory);\n        }\n        return newData;\n      }\n\n    useEffect(() => {\n        axios.get(`${API}/drip`)\n            .then((res) => {\n                setCollection(res.data);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n              window.alert(\"Error cant find drip!\");\n            });\n    },[])\n    const tester = sortData(collection)\n    console.log(tester)\n\n\n    return (\n        isLoading ? <h3> Loading... </h3> : \n        <div> \n        {/* {collection.map((drip) => <Drip key={drip.id} drip={drip}/>)} */}\n\n        {Object.keys(tester).map(function (keyName) {\n        return (\n          <>\n            <h1>{keyName}</h1>\n            <SectionWrapper key={tester[keyName].id} drip={tester[keyName]} />\n          </>\n        );\n      })}\n        </div>\n    );\n};\n\nexport default Drips;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAAA;AAC9C,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMc,QAAQ,GAAIC,IAAI,IAAK;IACvB,MAAMC,OAAO,GAAG,CAAC,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,MAAME,YAAY,GAAGJ,IAAI,CAACE,CAAC,CAAC;MAC5B,IAAI,CAACD,OAAO,CAACG,YAAY,CAACC,QAAQ,CAAC,EAAE;QACnCJ,OAAO,CAACG,YAAY,CAACC,QAAQ,CAAC,GAAG,EAAE;MACrC;MACAJ,OAAO,CAACG,YAAY,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACF,YAAY,CAAC;IACnD;IACA,OAAOH,OAAO;EAChB,CAAC;EAEHf,SAAS,CAAC,MAAM;IACZE,KAAK,CAACmB,GAAG,CAAE,GAAEjB,GAAI,OAAM,CAAC,CACnBkB,IAAI,CAAEC,GAAG,IAAK;MACXb,aAAa,CAACa,GAAG,CAACT,IAAI,CAAC;MACvBF,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAK;MACdC,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACvC,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,MAAM,GAAGf,QAAQ,CAACJ,UAAU,CAAC;EACnCoB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAGnB,OACIjB,SAAS,gBAAG;IAAA,UAAI;EAAY;IAAA;IAAA;IAAA;EAAA,QAAK,gBACjC;IAAA,UAGCoB,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,GAAG,CAAC,UAAUC,OAAO,EAAE;MAC5C,oBACE;QAAA,wBACE;UAAA,UAAKA;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eAClB,QAAC,cAAc;UAA0B,IAAI,EAAEN,MAAM,CAACM,OAAO;QAAE,GAA1CN,MAAM,CAACM,OAAO,CAAC,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAA2B;MAAA,gBACjE;IAEP,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACM;AAEd,CAAC;AAAC,GA7CI3B,KAAK;AAAA,KAALA,KAAK;AA+CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}